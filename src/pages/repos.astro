---
import "../styles/global.css";
import repos from '../data/repos.json';
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import SearchResults from '../components/SearchResults.astro';
import NavTabs from '../components/NavTabs.astro';
import GithubStar from '../components/GithubStar.astro'

const searchQuery = Astro.url.searchParams.get('q') || '';
---

<Layout title="人気リポジトリ - JapDev">
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <Hero />
    <SearchResults />
    <NavTabs />
    <!-- 人気リポジトリセクション -->
    <div class="space-y-4 mb-12">
      {repos.map((r) => (
        <div class="repo-item bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-lg transition-all hover:border-orange-200 group"
             data-search={JSON.stringify({ name: r.name, desc: r.desc, lang: r.lang })}>
          <div class="flex items-start justify-between">
            <div class="flex-1">
              <div class="flex items-center gap-3 mb-2">
                <svg class="w-5 h-5 text-gray-700" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                <h3 class="text-xl font-bold text-gray-900 group-hover:text-orange-600 transition-colors"><a href={r.url} alt={r.name} target="_blank>">{r.name}</a></h3>
                <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md">{r.lang}</span>
              </div>
              <p class="text-gray-600 mb-3">{r.desc}</p>
              <div class="flex items-center gap-4 text-sm">
                <span class="flex items-center gap-1 text-gray-700">
                  <svg class="w-4 h-4 fill-yellow-400 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                  {r.stars}
                </span>
                <span class="flex items-center gap-1 text-green-600 font-medium">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
                  </svg>
                  {r.trend} 今週
                </span>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    <GithubStar />
  </main>
</Layout>

<script define:vars={{ searchQuery }}>
  const searchResultsInfo = document.getElementById('search-results-info');
  const searchQueryEl = document.getElementById('search-query');
  const searchCountEl = document.getElementById('search-count');

  function performSearch(query) {
    const trimmedQuery = query.trim().toLowerCase();
    
    if (!trimmedQuery) {
      document.querySelectorAll('.repo-item').forEach(item => {
        item.style.display = '';
      });
      searchResultsInfo?.classList.add('hidden');
      return;
    }

    searchResultsInfo?.classList.remove('hidden');
    if (searchQueryEl) searchQueryEl.textContent = query;

    let totalCount = 0;

    document.querySelectorAll('.repo-item').forEach(item => {
      const searchData = item.getAttribute('data-search');
      if (searchData) {
        const data = JSON.parse(searchData);
        const searchText = Object.values(data).join(' ').toLowerCase();
        
        if (searchText.includes(trimmedQuery)) {
          item.style.display = '';
          totalCount++;
        } else {
          item.style.display = 'none';
        }
      }
    });

    if (searchCountEl) searchCountEl.textContent = totalCount.toString();
  }

  if (searchQuery) {
    performSearch(searchQuery);
  }

  window.addEventListener('search-updated', (e) => {
    performSearch(e.detail.query);
  });
</script>
