---
import "../styles/global.css";
import versions from '../data/versions.json';
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import SearchResults from '../components/SearchResults.astro';
import NavTabs from '../components/NavTabs.astro';
import GithubStar from '../components/GithubStar.astro';

const searchQuery = Astro.url.searchParams.get('q') || '';
---

<Layout title="最新バージョン - JapDev">
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <Hero />
    <SearchResults />
    <NavTabs />
    <div class="space-y-4 mb-12">
      {versions.map((v) => (
        <div class="version-item bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:shadow-md transition-all hover:border-emerald-200"
             data-search={JSON.stringify({ name: v.name, changelog: v.changelog })}>
          <div class="flex items-start justify-between">
            <div class="flex-1">
              <div class="flex items-center gap-3 mb-2">
                            <h3 class="text-xl font-bold text-gray-900"><a href={v.repoUrl} target="_blank" alt={v.name}>{v.name}</a></h3>
                <span class="text-2xl font-mono font-bold bg-linear-to-r from-emerald-600 to-teal-600 bg-clip-text text-transparent">{v.version}</span>
                {v.status === 'new' && (
                  <span class="px-3 py-1 bg-linear-to-r from-emerald-500 to-teal-500 text-white text-xs font-bold rounded-full">
                    NEW
                  </span>
                )}
                {v.status === 'lts' && (
                  <span class="px-3 py-1 bg-green-500 text-white text-xs font-bold rounded-full">
                    LTS
                  </span>
                )}
              </div>
              <p class="text-gray-600 mb-3">{v.description}</p>
              <div class="flex items-center gap-4 text-sm">
                <span class="flex items-center gap-1 text-gray-500">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  {v.date}
                </span>
                <a href={v.changelogUrl} target="_blank" class="flex items-center gap-1 text-emerald-600 hover:text-emerald-700 font-medium">
                  変更履歴を見る
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    <GithubStar />
  </main>
</Layout>

<script define:vars={{ searchQuery }}>
  const searchResultsInfo = document.getElementById('search-results-info');
  const searchQueryEl = document.getElementById('search-query');
  const searchCountEl = document.getElementById('search-count');

  function performSearch(query) {
    const trimmedQuery = query.trim().toLowerCase();
    
    if (!trimmedQuery) {
      document.querySelectorAll('.version-item').forEach(item => {
        item.style.display = '';
      });
      searchResultsInfo?.classList.add('hidden');
      return;
    }

    searchResultsInfo?.classList.remove('hidden');
    if (searchQueryEl) searchQueryEl.textContent = query;

    let totalCount = 0;

    document.querySelectorAll('.version-item').forEach(item => {
      const searchData = item.getAttribute('data-search');
      if (searchData) {
        const data = JSON.parse(searchData);
        const searchText = Object.values(data).join(' ').toLowerCase();
        
        if (searchText.includes(trimmedQuery)) {
          item.style.display = '';
          totalCount++;
        } else {
          item.style.display = 'none';
        }
      }
    });

    if (searchCountEl) searchCountEl.textContent = totalCount.toString();
  }

  if (searchQuery) {
    performSearch(searchQuery);
  }

  window.addEventListener('search-updated', (e) => {
    performSearch(e.detail.query);
  });
</script>
